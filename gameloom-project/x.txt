diff --git a/gameloom-project/api.js b/gameloom-project/api.js
index 867f0ea..f4157ee 100644
--- a/gameloom-project/api.js
+++ b/gameloom-project/api.js
@@ -1,13 +1,12 @@
 const BASE_URL = "http://localhost:8000"; 
 
+// Fetch list of games
 async function fetchGames(endpoint) {
   try {
     const response = await fetch(`${BASE_URL}/${endpoint}`);
-
     if (!response.ok) {
       throw new Error(`HTTP Error! Status: ${response.status}`);
     }
-
     const data = await response.json();
     return data.map((game) => ({
       id: game.id,
@@ -22,6 +21,11 @@ async function fetchGames(endpoint) {
   }
 }
 
+export const fetchAnticipatedGames = () => fetchGames("anticipated-games");
+export const fetchHighlyRatedGames = () => fetchGames("highly-rated-games");
+export const fetchLatestGames = () => fetchGames("latest-games");
+
+// Fetch single game details
 export const fetchGameDetails = async (gameId) => {
   try {
     const response = await fetch(`${BASE_URL}/games/${gameId}`);
@@ -29,14 +33,40 @@ export const fetchGameDetails = async (gameId) => {
       throw new Error(`HTTP error: ${response.status}`);
     }
     const data = await response.json();
-    // IGDB returns an array; we take the first (and only) item.
-    return data[0];
+
+    if (!data) return null;
+
+    return {
+      id: data.id,
+      name: data.name,
+      summary: data.summary || "No summary available.",
+      storyline: data.storyline || "No storyline available.",
+      releaseDate: data.first_release_date
+        ? new Date(data.first_release_date * 1000).toLocaleDateString()
+        : "Unknown Release Date",
+      coverImage: data.cover?.image_id
+        ? `https://images.igdb.com/igdb/image/upload/t_1080p/${data.cover.image_id}.jpg`
+        : null,
+      screenshots: data.screenshots?.map(s => 
+        `https://images.igdb.com/igdb/image/upload/t_screenshot_big/${s.image_id}.jpg`
+      ) || [],
+      videos: data.videos?.map(v => 
+        `https://www.youtube.com/embed/${v.video_id}`
+      ) || [],
+      genres: data.genres?.map(g => g.name).join(", ") || "Unknown",
+      platforms: data.platforms?.map(p => p.name).join(", ") || "Unknown",
+      rating: data.rating ? (data.rating / 20).toFixed(1) : "N/A",
+      aggregatedRating: data.aggregated_rating ? data.aggregated_rating.toFixed(1) : "N/A",
+      totalRating: data.total_rating ? data.total_rating.toFixed(1) : "N/A",
+      hypes: data.hypes || 0,
+      similarGames: data.similar_games || [],
+      developers: data.involved_companies?.map(c => c.company.name).join(", ") || "Unknown",
+      gameModes: data.game_modes?.map(m => m.name).join(", ") || "Unknown",
+      playerPerspectives: data.player_perspectives?.map(p => p.name).join(", ") || "Unknown",
+      themes: data.themes?.map(t => t.name).join(", ") || "Unknown",
+    };
   } catch (error) {
     console.error("Error fetching game details:", error);
     return null;
   }
-};
-
-export const fetchAnticipatedGames = () => fetchGames("anticipated-games");
-export const fetchHighlyRatedGames = () => fetchGames("highly-rated-games");
-export const fetchLatestGames = () => fetchGames("latest-games");
\ No newline at end of file
+};
\ No newline at end of file
diff --git a/gameloom-project/main.py b/gameloom-project/main.py
index c3d567a..6cbdec0 100644
--- a/gameloom-project/main.py
+++ b/gameloom-project/main.py
@@ -119,12 +119,27 @@ def get_game(game_id: int):
         "Accept": "application/json",
         "Content-Type": "application/json",
     }
-    body = f"fields name,genres.name,rating,cover.url,total_rating_count,first_release_date,platforms.name,summary; where id = {game_id};"
+
+    body = f"""
+        fields name, summary, storyline, first_release_date, 
+               genres.name, platforms.name, cover.image_id, 
+               screenshots.image_id, videos.video_id, rating, 
+               aggregated_rating, total_rating, hypes, similar_games,
+               involved_companies.company.name, game_modes.name, 
+               player_perspectives.name, themes.name;
+        where id = {game_id};
+    """
 
     try:
         response = requests.post(IGDB_URL, headers=headers, data=body)
         response.raise_for_status()
     except requests.exceptions.RequestException as e:
-        raise HTTPException(status_code=500, detail=f"Error fetching games: {str(e)}")
+        raise HTTPException(status_code=500, detail=f"Error fetching game details: {str(e)}")
+
+    game_data = response.json()
+
+    if not game_data:
+        raise HTTPException(status_code=404, detail="Game not found")
+
+    return game_data[0]
 
-    return response.json()
\ No newline at end of file
diff --git a/gameloom-project/src/pages/GamePage.jsx b/gameloom-project/src/pages/GamePage.jsx
index 4d951ec..130ab43 100644
--- a/gameloom-project/src/pages/GamePage.jsx
+++ b/gameloom-project/src/pages/GamePage.jsx
@@ -1,6 +1,7 @@
 import React, { useState, useEffect } from "react";
 import { useParams } from "react-router-dom";
 import { fetchGameDetails } from "../../api";
+import { Star, Calendar, Play, Bookmark, Flame, Users, List } from "lucide-react";
 
 const GamePage = () => {
   const { gameId } = useParams();
@@ -27,76 +28,63 @@ const GamePage = () => {
     getGameDetails();
   }, [gameId]);
 
-  if (loading) {
-    return (
-      <div className="flex items-center justify-center h-screen">
-        <p className="text-gray-300">Loading...</p>
-      </div>
-    );
-  }
-
-  if (error) {
-    return (
-      <div className="flex items-center justify-center h-screen">
-        <p className="text-red-500">{error}</p>
-      </div>
-    );
-  }
-
-  if (!game) {
-    return (
-      <div className="flex items-center justify-center h-screen">
-        <p className="text-gray-300">No game details found.</p>
-      </div>
-    );
-  }
+  if (loading) return <div className="flex-center h-screen">Loading...</div>;
+  if (error) return <div className="flex-center h-screen text-red-500">{error}</div>;
+  if (!game) return <div className="flex-center h-screen">No game details found.</div>;
 
   return (
-    <div className="max-w-5xl mx-auto p-4">
-      {/* Hero Section with Cover Image */}
+    <div className="container mx-auto px-6 py-12 text-[var(--color-light)]">
+      {/* Hero Section */}
       <div className="relative h-96">
-        <img
-          src={game.cover?.url.replace("t_thumb", "t_1080p")}
-          alt={game.name}
-          className="w-full h-full object-cover"
-        />
-        <div className="absolute inset-0 bg-black opacity-50"></div>
-        <div className="absolute bottom-4 left-4 text-white">
-          <h1 className="text-4xl font-bold">{game.name}</h1>
-          <p className="mt-2">
-            {game.first_release_date
-              ? new Date(game.first_release_date * 1000).toLocaleDateString()
-              : "Unknown Release Date"}
+        {game.coverImage && (
+          <img src={game.coverImage} alt={game.name} className="w-full h-full object-cover brightness-50 rounded-lg" />
+        )}
+        <div className="absolute inset-0 flex-center flex-col text-center px-6">
+          <h1 className="text-5xl font-bold">{game.name}</h1>
+          <p className="mt-2 text-lg text-gray-400">
+            <Calendar className="inline-block w-5 h-5 mr-1" /> {game.releaseDate}
           </p>
-        </div>
-      </div>
-
-      {/* Game Details Section */}
-      <div className="mt-6 text-gray-300">
-        <h2 className="text-2xl font-semibold mb-4">Overview</h2>
-        <p className="mb-4">{game.summary}</p>
-        <div className="flex flex-wrap gap-4">
-          <div>
-            <span className="font-bold">Genres:</span>{" "}
-            {game.genres ? game.genres.map((g) => g.name).join(", ") : "N/A"}
-          </div>
-          <div>
-            <span className="font-bold">Platforms:</span>{" "}
-            {game.platforms ? game.platforms.map((p) => p.name).join(", ") : "N/A"}
-          </div>
-          <div>
-            <span className="font-bold">Rating:</span>{" "}
-            {game.rating ? (game.rating / 20).toFixed(1) : "N/A"}{" "}
-            {game.total_rating_count ? `(${game.total_rating_count} reviews)` : ""}
+          <div className="mt-4 space-x-4">
+            <button className="btn-hero flex items-center">
+              <Bookmark className="w-5 h-5 mr-2" /> Add to Library
+            </button>
+            <button className="btn-hero bg-secondary flex items-center">
+              <Play className="w-5 h-5 mr-2" /> Watch Trailer
+            </button>
           </div>
         </div>
       </div>
 
-      {/* Reviews Section */}
+      {/* Game Details */}
       <div className="mt-8">
-        <h2 className="text-2xl font-semibold mb-4">User Reviews</h2>
-        <p className="text-gray-500">Reviews will be displayed here in future.</p>
+        <h2 className="text-3xl font-semibold mb-4">Game Overview</h2>
+        <p className="text-gray-300 mb-4">{game.storyline}</p>
+        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
+          <p><strong>Genres:</strong> {game.genres}</p>
+          <p><strong>Platforms:</strong> {game.platforms}</p>
+          <p><strong>Developers:</strong> {game.developers}</p>
+          <p><strong>Game Modes:</strong> {game.gameModes}</p>
+          <p><strong>Player Perspective:</strong> {game.playerPerspectives}</p>
+          <p><strong>Themes:</strong> {game.themes}</p>
+          <p className="flex items-center">
+            <Flame className="w-5 h-5 text-red-400 mr-2" /> <strong>Hype:</strong> {game.hypes}
+          </p>
+        </div>
       </div>
+
+      {/* Similar Games */}
+      {game.similarGames.length > 0 && (
+        <div className="mt-8">
+          <h2 className="text-2xl font-semibold mb-4">Similar Games</h2>
+          <div className="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4">
+            {game.similarGames.map((gameId, index) => (
+              <div key={index} className="p-4 bg-gray-800 rounded-lg text-center">
+                <p className="text-gray-300">Game ID: {gameId}</p>
+              </div>
+            ))}
+          </div>
+        </div>
+      )}
     </div>
   );
 };
